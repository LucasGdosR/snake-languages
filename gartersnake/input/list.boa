(data Link (Num Link))
(def head   (l : Link) : Num  (get l 0))
(def tail   (l : Link) : Link (get l 1))
(def isNull (l : Link) : Bool (== l (null Link)))
(def length (l : Link) : Num  (if (isNull l) 0 (+ 1 (length (tail l)))))
(def sum    (l : Link) : Num  (if (isNull l) 0 (+ (head l) (sum (tail l)))))
(def append (l1 : Link l2 : Link) : Link (if (isNull l1) l2 (Link (head l1) (append (tail l1) l2))))
(def reverseHelper (acc : Link l : Link) : Link (if (isNull l) acc (reverseHelper (Link (head l) acc) (tail l))))
(def reverse (l : Link) : Link (reverseHelper (null Link) l))
